struct MyStruct{
 Float y;
 Int x;
 Char z;
 Char aa;
}

Int function test2(MyStruct str){
	str.x = 10;
	return(str.x);
}

Int function test1(){
	MyStruct s = MyStruct;
	test2(s);
	return(s.x);
}

stackret MyStruct function test4(){
	MyStruct s = MyStruct;
	s.x = 10;
	return(s);
}

Int function test3(){
	MyStruct s = test4();
	return(s.x);
}

Int function main1(){
	MyStruct[] x = ~MyStruct[24];
	x[3] = MyStruct;
	x[3].x = 43;
	Int[] w = Int[43];
	w[0] = 1;
	w[1] = 1;
	for(Int i = 2; i < 43; i = i + 1;){
		w[i] = w[i - 1] + w[i - 2];
	}
	return x[3].x + w[24];
}

Int function main(){
	MyStruct[][] k = MyStruct[25][25];
	for(Int i = 0; i < 25; i = i + 1;){
		for(Int j = 0; j < 25; j = j + 1;){
			k[i][j].x = i * j;
		}
	}
	Int[][] l = Int[25][25];
	for(Int i = 0; i < 25; i = i + 1;){
		for(Int j = 0; j < 25; j = j + 1;){
			l[i][j] = i * j;
		}
	}
	Int[] q = Int[25];
	for(Int i = 0; i < 25; i = i + 1;){
		q[i] = i*i;
	}
	
	MyStruct s = MyStruct;
	s.x = 32;
	return(k[13][13].x + l[14][14] + q[13] + s.x);
}

Int function main2(){
	Int[][] p = Int[2][3];
	p[1][1] = 243;
	p[1][2] = p[1][1] + 10;
	return(p[1][2]);
}
