// Copyright (c) 2022, WNProject Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// CHECK:      typedef struct __array0_int32_t {
// CHECK-NEXT:   uint32_t _size;
// CHECK-NEXT:   int32_t _val[];
// CHECK-NEXT: } _array0_int32_t;

// CHECK:      typedef struct __array4_int32_t {
// CHECK-NEXT:   uint32_t _size;
// CHECK-NEXT:   int32_t _val[4];
// CHECK-NEXT: } _array4_int32_t;

// CHECK: {{3fooE.*{}}
Int foo(Int[] x, Int y) {
// CHECK: _return = x->_val[y];
  return x[y];
}

// RUN: all_sized 1 -> 3
// RUN: all_sized 2 -> 1
// RUN: all_sized 0 -> 3
// CHECK: {{9all_sizedE.*{}}
Int all_sized(Int x) {
// CHECK: _array4_int32_t bar;
// CHECK-NEXT: bar._size = 4;
// CHECK-NEXT:  int32_t _wns_temp0 = 0;
// CHECK-NEXT:  while ((_wns_temp0 < bar._size)) {
// CHECK-NEXT:    {
// CHECK-NEXT:       bar._val[_wns_temp0] = 3;
// CHECK-NEXT:       _wns_temp0 = (_wns_temp0 + 1);
// CHECK-NEXT:    }
// CHECK-NEXT:  }
  Int[4] bar = Int[4](3);
  bar[2] = 1;
// CHECK: bar._val[2] = 1;
// CHECK: _return = _ZN3wns3fooEiA0_ii(((_array0_int32_t*)&bar), x);
  return foo(bar, x);
}

// RUN: unsized 1 -> 3
// RUN: unsized 2 -> 1
// RUN: unsized 0 -> 3
// CHECK: {{7unsizedE.*{}}
Int unsized(Int x) {
  Int[] bar = Int[4](3);
// CHECK:  _array4_int32_t _wns_temp1;
// CHECK-NEXT: _wns_temp1._size = 4;
// CHECK-NEXT:  int32_t _wns_temp2 = 0;
// CHECK-NEXT:  while ((_wns_temp2 < _wns_temp1._size)) {
// CHECK-NEXT:    {
// CHECK-NEXT:      _wns_temp1._val[_wns_temp2] = 3;
// CHECK-NEXT:      _wns_temp2 = (_wns_temp2 + 1);
// CHECK-NEXT:    }
// CHECK-NEXT:  }

// CHECK:  bar = ((_array0_int32_t*)&_wns_temp1);
bar[2] = 1;
// CHECK: bar->_val[2] = 1;
// CHECK-NEXT: _return = _ZN3wns3fooEiA0_ii(bar, x);
  return foo(bar, x);
}
