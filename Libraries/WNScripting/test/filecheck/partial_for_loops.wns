// Copyright (c) 2022, WNProject Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// RUN: for_loop_without_init 10 -> 10
// RUN: for_loop_without_init 20 -> 20
// RUN: for_loop_without_init -10 -> 10
// CHECK: {{.*for_loop_without_init.*{}}
Int for_loop_without_init(Int x) {
// CHECK: int32_t i = x;
    Int i = x;
    for (; i < 10; i += 1) {
// CHECK:  while (true) {
// CHECK-NEXT:    {
// CHECK-NEXT:      bool _wns_temp0 = (i < 10);
// CHECK-NEXT:      if (!_wns_temp0) break;
// CHECK-NEXT:    }{
// CHECK-NEXT:      do {
// CHECK-NEXT:      } while (false);
// CHECK-NEXT:      if (__c_temp0) { break; }
// CHECK-NEXT:      {
// CHECK-NEXT:        i = (i + 1);
// CHECK-NEXT:      }
// CHECK-NEXT:    }

    }
    return i;
}

// RUN: for_loop_without_condition 10 -> 14
// RUN: for_loop_without_condition 20 -> 24
// RUN: for_loop_without_condition -10 -> -6
// CHECK: {{.*for_loop_without_condition.*{}}
Int for_loop_without_condition(Int x) {
    Int f = 0;
// CHECK:         while (true) {
// CHECK-NEXT:    {
// CHECK-NEXT:      do {
// CHECK-NEXT:        bool unentered1 = true;
// CHECK-NEXT:        bool enter2 = false;
// CHECK-NEXT:        if (unentered1) {
// CHECK-NEXT:          enter2 = (f == 4);
// CHECK-NEXT:          if (enter2) {
// CHECK-NEXT:            unentered1 = false;
// CHECK-NEXT:            __c_temp1 = true; break;
// CHECK-NEXT:          }
// CHECK-NEXT:        }
// CHECK-NEXT:        f = (f + 1);
// CHECK-NEXT:      } while (false);
// CHECK-NEXT:      if (__c_temp1) { break; }
// CHECK-NEXT:      {
// CHECK-NEXT:        x = (x + 1);
// CHECK-NEXT:      }
// CHECK-NEXT:    }
// CHECK-NEXT:  }
    for (Int i = x;; x += 1) {
        if (f == 4) {
            break;
        }
        f = f + 1;
    }
    return x;
}

// RUN: for_loop_without_increment 10 -> 22
// RUN: for_loop_without_increment 20 -> 22
// RUN: for_loop_without_increment -10 -> 22
// CHECK: {{.*for_loop_without_increment.*{}}
Int for_loop_without_increment(Int x) {
    Int f = 0;
    // CHECK:      int32_t i = x;
    // CHECK-NEXT: while (true) {
    // CHECK-NEXT:     {
    // CHECK-NEXT:     bool _wns_temp3 = (x != 22);
    // CHECK-NEXT:     if (!_wns_temp3) break;
    // CHECK-NEXT:     }{
    // CHECK-NEXT:     x = (x + 1);
    // CHECK-NEXT:     }
    // CHECK-NEXT: }
    for (Int i = x; x != 22;) {
        x = x + 1;
    }
    return x;
}

// RUN: for_loop_empty 10 -> 10
// RUN: for_loop_empty 20 -> 20
// CHECK: {{.*for_loop_empty.*{}}
Int for_loop_empty(Int x) {
    for (;;) {
        break;
    }
// CHECK:      while (true) {
// CHECK-NEXT:   {
// CHECK-NEXT:      break;
// CHECK-NEXT:   }
// CHECK-NEXT: }
    return x;
}
