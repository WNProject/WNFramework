name: Pull Request
on: pull_request
permissions:
  contents: read
concurrency:
  group: pull-request-${{github.ref}}
  cancel-in-progress: true
jobs:
  label:
    name: Label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 5
    steps:
      - name: Apply labels
        uses: actions/labeler@4.1.0
        with:
          repo-token: ${{github.token}}
  analyze-changes:
    name: Analyze Changes
    timeout-minutes: 5
    runs-on: ubuntu-latest
    outputs:
      run-build: ${{steps.analyze-changes.outputs.run-build}}
      run-check-licenses: ${{steps.analyze-changes.outputs.run-check-licenses}}
      run-format-check-c-cpp: ${{steps.changed-files-c-cpp.outputs.any_changed == 'true' || steps.changed-files-c-cpp-config.outputs.any_changed == 'true'}}
      run-format-check-md: ${{steps.changed-files-md.outputs.any_changed == 'true' || steps.changed-files-md-config.outputs.any_changed == 'true'}}
      changes-externals: ${{steps.analyze-changes.outputs.changes-externals}}
      changes-c-cpp: ${{steps.changed-files-c-cpp.outputs.all_changed_files}}
      changes-md: ${{steps.changed-files-md.outputs.all_changed_files}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - name: Get changed files (Markdown)
        id: changed-files-md
        uses: tj-actions/changed-files@v34.4.4
        with:
          files: '**/*.md'
          separator: "\0"
      - name: Get changed files (Markdown configuration)
        id: changed-files-md-config
        uses: tj-actions/changed-files@v34.4.4
        with:
          files: |
            .markdownlintrc
            .markdownlintignore
          separator: "\0"
      - name: Get changed files (C/C++)
        id: changed-files-c-cpp
        uses: tj-actions/changed-files@v34.4.4
        with:
          files: |
            **/*.c
            **/*.cpp
            **/*.h
            **/*.hpp
            **/*.inl
          separator: "\0"
      - name: Get changed files (C/C++ configuration)
        id: changed-files-c-cpp-config
        uses: tj-actions/changed-files@v34.4.4
        with:
          files: .clang-format
          separator: "\0"
      - name: Analyze changes
        id: analyze-changes
        shell: bash
        run: |
          build_ignore=()
          while IFS= read -r line || [[ "$line" ]]; do
            build_ignore+=(':!'"$line")
          done < .build-ignore
          build_changes=$(
            git diff --name-status origin/master HEAD -- ${build_ignore[@]} |
            sort
          )
          if [ -z "$build_changes" ]; then
            build=false
          else
            build=true
          fi
          changes_externals=$(
            git diff --name-only origin/master HEAD -- \
            externals/ ':!externals/CMakeLists.txt' ':!externals/*/*'
          )
          if [ -z "$changes_externals" ]; then
            check_licenses=false
          else
            check_licenses=true
          fi
          echo "Run build: $build"
          echo "Run license check: $check_licenses"
          if [ -z "$build_changes" ]; then
            echo 'Changes affecting build: [none]'
          else
            echo -e "Changes affecting build:\n$build_changes"
          fi
          if [ -z "$changes_externals" ]; then
            echo 'Changes (Externals): [none]'
          else
            echo -e "Changes (Externals):\n$changes_externals"
          fi
          delimiter=$(head -c 16 /dev/urandom | base64)
          echo "run-build=$build" >> $GITHUB_OUTPUT
          echo "run-check-licenses=$check_licenses" >> $GITHUB_OUTPUT
          echo "changes-externals<<$delimiter" >> $GITHUB_OUTPUT
          echo "$changes_externals" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT
  ci:
    name: CI
    needs:
      - analyze-changes
    uses: ./.github/workflows/ci.yml
    secrets: inherit
    with:
      run-build: ${{needs.analyze-changes.outputs.run-build == 'true'}}
      run-check-licenses: ${{needs.analyze-changes.outputs.run-check-licenses == 'true'}}
      run-format-check-c-cpp: ${{needs.analyze-changes.outputs.run-format-check-c-cpp == 'true'}}
      run-format-check-md: ${{needs.analyze-changes.outputs.run-format-check-md == 'true'}}
      changes-externals: ${{needs.analyze-changes.outputs.changes-externals}}
      changes-c-cpp: ${{needs.analyze-changes.outputs.changes-c-cpp}}
      changes-md: ${{needs.analyze-changes.outputs.changes-md}}
      use-sccache: ${{github.actor != 'dependabot[bot]'}}
