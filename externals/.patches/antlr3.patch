diff -udw externals/antlr3/runtime/Cpp/include/antlr3.hpp externals/antlr3/runtime/Cpp/include/antlr3.hpp
--- externals/antlr3/runtime/Cpp/include/antlr3.hpp	2021-01-10 02:08:49.911563900 -0500
+++ externals/antlr3/runtime/Cpp/include/antlr3.hpp	2021-01-10 01:48:25.152298800 -0500
@@ -28,6 +28,19 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 // THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
+#ifdef __clang__
+    #pragma clang diagnostic ignored "-Wtautological-undefined-compare"
+#endif
+#ifdef __GNUC__
+    #pragma GCC diagnostic ignored "-Wsign-compare"
+#endif
+
+#ifdef _HAS_EXCEPTIONS
+    #undef _HAS_EXCEPTIONS
+#endif
+
+#define _HAS_EXCEPTIONS 0
+
 #include <string>
 #include <sstream>
 
diff -udw externals/antlr3/runtime/Cpp/include/antlr3filestream.inl externals/antlr3/runtime/Cpp/include/antlr3filestream.inl
--- externals/antlr3/runtime/Cpp/include/antlr3filestream.inl	2021-01-10 02:08:49.912559300 -0500
+++ externals/antlr3/runtime/Cpp/include/antlr3filestream.inl	2021-01-10 01:52:15.598983700 -0500
@@ -39,14 +39,6 @@
 	*/
 	infile  = FileUtils<ImplTraits>::AntlrFopen(fileName, "rb");
 
-	/* Check that it was there
-	*/
-	if	(infile == NULL)
-	{
-		ParseFileAbsentException ex;
-		throw ex;
-	}
-
 	/* It was there, so we can read the bytes now
 	*/
 	fSize   = FileUtils<ImplTraits>::AntlrFsize(fileName);	/* Size of input file	*/
diff -udw externals/antlr3/runtime/Cpp/include/antlr3input.inl externals/antlr3/runtime/Cpp/include/antlr3input.inl
--- externals/antlr3/runtime/Cpp/include/antlr3input.inl	2021-01-10 02:08:49.913560200 -0500
+++ externals/antlr3/runtime/Cpp/include/antlr3input.inl	2021-01-10 01:53:13.505956800 -0500
@@ -59,12 +59,6 @@
 template<class ImplTraits>
 void InputStream<ImplTraits>::createStringStream(const ANTLR_UINT8* data)
 {
-	if	(data == NULL)
-	{
-		ParseNullStringException ex;
-		throw ex;
-	}
-
 	// Structure was allocated correctly, now we can install the pointer
 	//
     m_data             = data;
@@ -79,12 +73,6 @@
 template<class ImplTraits>
 void InputStream<ImplTraits>::createFileStream(const ANTLR_UINT8* fileName)
 {
-	if	(fileName == NULL)
-	{
-		ParseFileAbsentException ex;
-		throw ex;
-	}
-
 	// Structure was allocated correctly, now we can read the file.
 	//
 	FileUtils<ImplTraits>::AntlrRead8Bit(this, fileName);
diff -udw externals/antlr3/runtime/Cpp/include/antlr3memory.hpp externals/antlr3/runtime/Cpp/include/antlr3memory.hpp
--- externals/antlr3/runtime/Cpp/include/antlr3memory.hpp	2021-01-10 02:08:49.915558600 -0500
+++ externals/antlr3/runtime/Cpp/include/antlr3memory.hpp	2021-01-10 02:08:04.567514300 -0500
@@ -37,6 +37,11 @@
 #include <set>
 #include <vector>
 
+#if defined(_MSC_VER) && _MSC_VER >= 1900
+#pragma warning(push)
+#pragma warning(disable : 4100)
+#endif
+
 #include   "antlr3defs.hpp"
 
 ANTLR_BEGIN_NAMESPACE()
@@ -100,13 +105,13 @@
 
 	template<class KeyType, class ValueType>
 	class UnOrderedMapType : public std::map< KeyType, ValueType, std::less<KeyType>, 
-										AllocatorType<std::pair<KeyType, ValueType> > >
+										AllocatorType<std::pair<const KeyType, ValueType> > >
 	{
 	};
 
 	template<class KeyType, class ValueType>
 	class OrderedMapType : public std::map< KeyType, ValueType, std::less<KeyType>, 
-										AllocatorType<std::pair<KeyType, ValueType> > >
+										AllocatorType<std::pair<const KeyType, ValueType> > >
 	{
 	};
 
@@ -135,16 +140,12 @@
 	ANTLR_INLINE static void* alloc( std::size_t bytes )
 	{
 		void* p = malloc(bytes); 
-		if( p== NULL )
-			throw std::bad_alloc();
 		return p;
 	}
 
 	ANTLR_INLINE static void* alloc0( std::size_t bytes )
 	{
 		void* p = calloc(1, bytes);
-		if( p== NULL )
-			throw std::bad_alloc();
 		return p;
 	}
 
@@ -161,4 +162,8 @@
 
 ANTLR_END_NAMESPACE()
 
+#if defined(_MSC_VER) && _MSC_VER >= 1900
+#pragma warning(pop)
+#endif
+
 #endif	/* _ANTLR3MEMORY_H */
diff -udw externals/antlr3/runtime/Cpp/include/antlr3tokenstream.inl externals/antlr3/runtime/Cpp/include/antlr3tokenstream.inl
--- externals/antlr3/runtime/Cpp/include/antlr3tokenstream.inl	2021-01-10 02:08:49.916561500 -0500
+++ externals/antlr3/runtime/Cpp/include/antlr3tokenstream.inl	2021-01-10 02:03:30.249071400 -0500
@@ -519,11 +519,6 @@
 															BoolForwarder<true>  /*tokens_accessed_from_owning_rule*/  )
 {
 	typename TokensType::iterator iter = m_tokens.find(tok_idx);
-	if( iter == m_tokens.end() )
-	{
-		TokenAccessException ex;
-		throw ex;
-	}
 	const TokenType& tok = iter->second;
     return  &tok; 
 }
