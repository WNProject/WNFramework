// Copyright (c) 2018, WNProject Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE.txt file.

class RenderDependency(Int rt, Int fo) {
    // The render_target instance that
    //    this is dependent on
    Int render_target = rt;
    // The frame that the dependency comes from
    //   0 for the current frame, -1 for the previous etc
    Int frame_offset = fo;

    Int get_render_target() { return render_target; }
    Int get_frame_offset() { return frame_offset; }
}

class RenderTargetUsage(Int rt, Int cm, Int sm) {
    Int render_target = rt;
    Int clear_mode = cm;
    Int store_mode = sm;

    Int get_render_target() {
        return render_target;
    }
    Int get_clear_mode() {
        return clear_mode;
    }
    // TODO(awoloszyn): Figure out how to infer the store mode.
    //    It seems like something we shouldn't need if we have
    //    clear_mode;
    Int get_store_mode() {
        return store_mode;
    }
}

class PassData {
    // TODO: figure out enums to make this nicer,
    // rather than needing to use a CString
    CString get_pass_name() {
        return pass_name;
    }

    RenderTargetUsage[] get_render_targets() {
        return render_targets;
    }
    RenderTargetUsage get_depth_target() {
        return depth_target;
    }
    RenderDependency[] get_render_dependencies() {
        return input_targets;
    }

    RenderTargetUsage[] render_targets = RenderTargetUsage[](
        RenderTargetUsage(-1, clear_mode_dont_care, store_mode_dont_care)
    );
    RenderTargetUsage depth_target = RenderTargetUsage(-1, clear_mode_dont_care, store_mode_dont_care);
    RenderDependency[] input_targets = RenderDependency[1](RenderDependency(-1, -1));
    CString pass_name = "";
}
