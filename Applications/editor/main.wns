// Copyright (c) 2018, WNProject Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE.txt file.

include "renderer/render_data.wns"
include "renderer/render_description.wns"

// Temphack: For now we need this included
//   somewhere for compilation.
// TODO(awoloszyn): Have resources defined what
//   files they need included.
include "renderer/texture_description.wns"

class MyPass : PassData {
  .render_targets = shared RenderTargetUsage[](
    RenderTargetUsage(0, clear_mode_clear, store_mode_store)
  );
  .depth_target = RenderTargetUsage(1, clear_mode_clear, store_mode_dont_care);
  .pass_name = "Initial Pass";
}

class MainTarget: RTDescription(shared RenderContext rnd) {
  .name = "MainRT";
  .format = format_r8g8b8a8_unorm;
  shared RenderContext renderer = rnd;
  override Int get_width() {
    return renderer.width();
  }
  override Int get_height() {
    return renderer.height();
  }
}

class DepthTarget: MainTarget(RenderContext rnd) {
  .name = "DepthRT";
  .format = format_d32_float;
  .depth = true;
}

class MainDesc: RenderDescription(shared RenderContext rnd) {
  .render_targets = shared RTDescription[](
    shared MainTarget(rnd),
    shared DepthTarget(rnd)
  );
  .passes = PassData[](MyPass());
  .output_target = 0;
}

Int main(Context ctx) {
  shared Window window = get_window(ctx, 1920, 1080);
  shared RenderContext context = get_render_context(ctx, window);
  
  MainDesc desc = MainDesc(context);
  context.register_description(desc);

  shared MainGUI main_gui = @UIResource("assets/ui/main.rml");
  context.add_renderable_to_passes(get_renderer(ctx, main_gui), CString[]("Initial Pass"){0:1});
  
  while(true) {
    context.render();
  }

  return 32;
}
